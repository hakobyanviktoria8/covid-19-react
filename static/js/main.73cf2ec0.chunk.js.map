{"version":3,"sources":["LeftAside/Table/Table.js","sorted.js","LeftAside/Graph/Graph.js","LeftAside/LeftAside.js","RightAside/ModalComp/ModalComp.js","RightAside/RightAside.js","MainContent/Cases/Cases.js","MainContent/Map/Map.js","MainContent/MainContent.js","App.js","serviceWorker.js","index.js"],"names":["TableComp","props","useState","countries","setCountries","useEffect","fetch","then","response","json","data","sortedCountries","sort","a","b","cases","className","striped","style","width","map","item","idx","key","src","countryInfo","flag","alt","country","numeral","format","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltinItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","chartDataFunc","casesType","lastData","chartData","date","newDataPoint","x","y","push","GraphComp","setData","graphFunc","length","datasets","backgroundColor","borderColor","LeftAside","ModalComp","buttonLabel","modal","setModal","toggle","Button","color","onClick","Modal","isOpen","ModalHeader","title","ModalBody","description","urlToImage","content","href","url","source","name","publishedAt","slice","ModalFooter","RightAside","news","setNews","articles","catch","console","log","totalNews","Container","Row","Col","xs","sm","md","lg","xl","author","Cases","active","setCasesType","e","todayCases","recovered","todayRecovered","deaths","todayDeaths","dataColor","hex","multiplier","Map","center","zoom","TileLayer","attribution","Circle","lat","long","fillOpacity","fillColor","Math","sqrt","Popup","showCircle","MainContent","setActive","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","totalData","App","setCountry","getCountries","fluid","FormControl","Select","variant","onChange","event","target","MenuItem","iso3","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.73cf2ec0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Table.css\";\r\nimport { Table } from 'reactstrap';\r\nimport {sorted} from \"../../sorted\";\r\nimport numeral from \"numeral\";\r\n\r\nexport function TableComp(props) {\r\n    const [countries,setCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        // fetch(\"https://disease.sh/v3/covid-19/countries/\")\r\n        fetch(\"https://corona.lmao.ninja/v2/countries\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const sortedCountries = sorted(response);\r\n                setCountries(sortedCountries)\r\n                }\r\n            )\r\n    },[]);\r\n\r\n    return(\r\n       <div className={\"tableDiv my-2\"}>\r\n           <Table striped>\r\n               <thead>\r\n                   <tr className={\"tableHeader\"}>\r\n                       <th style={{width:\"15%\"}}>Flag</th>\r\n                       <th style={{width:\"60%\"}}>Name</th>\r\n                       <th style={{width:\"25%\"}}>Cases</th>\r\n                   </tr>\r\n               </thead>\r\n               <tbody>\r\n               {\r\n                   countries.map((item,idx) =>\r\n                       <tr className={\"p-1\"} key={idx}>\r\n                           <td className={\"p-0\"}>\r\n                               <img className={\"tableFlag\"} src={item.countryInfo.flag} alt=\"\"/>\r\n                           </td>\r\n                           <td className={\"p-1\"}>{item.country}</td>\r\n                           <td className={\"p-1\"}>{numeral(item.cases).format(\"0,0\")}</td>\r\n                       </tr>\r\n                   )\r\n               }\r\n               </tbody>\r\n           </Table>\r\n       </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\n//sorted Cases Data in table\r\nexport const sorted = (data) =>{\r\n    const sortedData = [...data];\r\n    return sortedData.sort((a,b) => a.cases > b.cases ? -1 : 1);\r\n};\r\n\r\n\r\n\r\n","import React,{ useState, useEffect } from \"react\";\r\nimport \"./Graph.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n    legend:{\r\n        display:false\r\n    },\r\n    elements:{\r\n        point: {\r\n            radius: 0,\r\n        }\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips:{\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks:{\r\n            label: function (tooltinItem, data) {\r\n                return numeral(tooltinItem.value).format(\"+0,0\")\r\n            }\r\n        }\r\n    },\r\n    scales:     {\r\n        xAxes: [{\r\n            type: \"time\",\r\n            time: {\r\n                format: \"MM/DD/YY\",\r\n                tooltipFormat: 'll'\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            gridLines: {\r\n                display:false\r\n            },\r\n            ticks: {\r\n                callback: function(value, index, values) {\r\n                    return numeral(value).format('0a');\r\n                }\r\n            }\r\n        }]\r\n    }\r\n};\r\n\r\nconst chartDataFunc = (data, casesType) => {\r\n    const chartData = [];\r\n    let lastData;\r\n    for(let date in data.cases) {\r\n        if (lastData){\r\n            const  newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastData\r\n            };\r\n            chartData.push(newDataPoint)\r\n        }\r\n        lastData = data[casesType][date]\r\n    }\r\n    return chartData;\r\n};\r\n//use chartjs to make graph\r\n\r\nexport function GraphComp({casesType = \"cases\"}) {\r\n    const [data, setData] = useState({});\r\n\r\n    useEffect(()=>{\r\n        const graphFunc = async()=>{\r\n            await fetch(\"https://corona.lmao.ninja/v2/historical/all?lastdays=120\")\r\n                .then(response => response.json())\r\n                .then(data=> {\r\n                    // console.log(data);\r\n                    setData(chartDataFunc(data,\"cases\"));\r\n                })\r\n        };\r\n        graphFunc();\r\n    },[casesType]);\r\n\r\n    return(\r\n        <div className={\"Graph\"}>\r\n            {\r\n                data?.length > 0 && (\r\n                    <Line\r\n                        data={{\r\n                            datasets:[\r\n                                {\r\n                                    data: data,\r\n                                    backgroundColor: \"#e8f7ff\",\r\n                                    borderColor:\"#6d89d0\"\r\n                                }\r\n                            ]\r\n                        }}\r\n                        options={options}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./LeftAside.css\";\r\nimport {TableComp} from \"./Table/Table\";\r\nimport {GraphComp} from \"./Graph/Graph\";\r\n\r\nexport function LeftAside(props) {\r\n    return(\r\n        <div className={\"LeftAside\"}>\r\n            <h4 className={\"subTitle\"}>Total Cases by Country</h4>\r\n            <TableComp/>\r\n            <h4 className={\"subTitle\"}>Total Cases by Graph</h4>\r\n            <GraphComp />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport \"./ModalComp.css\";\r\n\r\nconst ModalComp = (props) => {\r\n    const {\r\n        buttonLabel,\r\n        className\r\n    } = props;\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    return (\r\n        <div>\r\n            <Button color=\"secondary\" onClick={toggle}>Read more</Button>\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n                <ModalHeader toggle={toggle} className={\"text-center\"}>{props.item.title}</ModalHeader>\r\n                <ModalBody>\r\n                    <p>{props.item.description}</p>\r\n                    <img className ={\"w-100\"} src={props.item.urlToImage} alt=\"\"/>\r\n                    <p>{props.item.content}\r\n                        <a href={props.item.url}> Read more</a>\r\n                    </p>\r\n                    <p>By {props.item.source.name} {props.item.publishedAt.slice(0,10)}</p>\r\n                </ModalBody>\r\n                <ModalFooter className={\"modalFooter\"}>\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalComp;","import React, { useState, useEffect } from \"react\";\r\nimport \"./RightAside.css\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport ModalComp from \"./ModalComp/ModalComp\";\r\n\r\nexport function RightAside(props) {\r\n    const [news,setNews] = useState([]);\r\n    useEffect(()=>{\r\n        const totalNews = async()=>{\r\n            await fetch(\"http://newsapi.org/v2/everything?q=covid-19&apiKey=ecc35603d76b4d2bad4b5ee335b6ff80\")\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    setNews(response.articles)\r\n                    }\r\n                )\r\n                .catch(() => console.log(\"Can’t access  response.\"))\r\n        };\r\n        totalNews();\r\n    },[]);\r\n\r\n    // useEffect(()=>{\r\n    //     fetch(\"http://newsapi.org/v2/everything?q=covid-19&apiKey=ecc35603d76b4d2bad4b5ee335b6ff80\")\r\n    //         .then(response => response.json())\r\n    //         .then(response => {\r\n    //             setNews(response.articles);\r\n    //         })\r\n    // },[]);\r\n\r\n    return(\r\n        <Container className={\"RightAside\"}>\r\n            <div className={\"RightAsideRow\"}>\r\n                <Row>\r\n                    <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\r\n                        <h4 className={\"subTitle\"}>Today news</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {\r\n                        news.map((item,idx) =>\r\n                            <Col className={\"cart p-2\"} key={idx} xs=\"12\" sm=\"12\" md=\"6\" lg=\"4\" xl=\"12\">\r\n                                <div className={\"divCart\"}>\r\n                                    <h6><b>{item.title.length>50 ? item.title.slice(0,50) : item.title} </b></h6>\r\n                                    <img src={item.urlToImage} alt=\"\"/>\r\n                                    <p className={\"mt-2 mb-0\"}>By {item.source.name} {item.publishedAt.slice(0,10)}</p>\r\n                                    <small>{item.author}</small>\r\n\r\n                                    <ModalComp item = {item}/>\r\n                                </div>\r\n                            </Col>\r\n                        )\r\n                    }\r\n                </Row>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport \"./Cases.css\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport numeral from \"numeral\";\r\n\r\nexport function Cases({data, active}) {\r\n    const [casesType,setCasesType] = useState(\"cases\");\r\n\r\n    return(\r\n        <Container>\r\n            <Row className={\"Cases\"}>\r\n                <Col className={\"p-1\"} xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\" xl=\"3\">\r\n                    <div className={\"CasesDiv\"}\r\n                         onClick={(e)=>setCasesType(\"cases\")}\r\n                    >\r\n                        <p className={\"m-0\"}>Cases</p>\r\n                        <h4 className={\"CasesNumber numSize\"}>+{numeral(data.cases).format(\"0.0a\")}</h4>\r\n                        <small>Today <b>{numeral(data.todayCases).format(\"0.0a\")}</b></small>\r\n                    </div>\r\n                </Col>\r\n                <Col className={\"p-1\"} xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\" xl=\"3\">\r\n                    <div className={\"CasesDiv\"}\r\n                         onClick={(e)=>setCasesType(\"recovered\")}\r\n                    >\r\n                        <p className={\"m-0\"}>Recovered</p>\r\n                        <h4 className={\"RecoveredNumber\"}>+{numeral(data.recovered).format(\"0.0a\")}</h4>\r\n                        <small>Today <b>{numeral(data.todayRecovered).format(\"0.0a\")}</b></small>\r\n                    </div>\r\n                </Col>\r\n                <Col className={\"p-1\"} xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\" xl=\"3\">\r\n                    <div className={\"CasesDiv\"}\r\n                         onClick={(e)=>setCasesType(\"active\")}\r\n                    >\r\n                        <p className={\"m-0\"}>Active</p>\r\n                        <h4 className={\"ActiveNumber numSize\"}>+{numeral(data.active).format(\"0.0a\")}</h4>\r\n                        <small>Today <b>{numeral(active).format(\"0.0a\")}</b></small>\r\n                    </div>\r\n                </Col>\r\n                <Col className={\"p-1\"} xs=\"3\" sm=\"3\" md=\"3\" lg=\"3\" xl=\"3\">\r\n                    <div className={\"CasesDiv\"}\r\n                         onClick={(e)=>setCasesType(\"deaths\")}\r\n                    >\r\n                        <p className={\"m-0\"}>Deaths</p>\r\n                        <h4 className={\"DeathsNumber numSize\"}>+{numeral(data.deaths).format(\"0.0a\")}</h4>\r\n                        <small>Today <b>{numeral(data.todayDeaths).format(\"0.0a\")}</b></small>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./Map.css\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport numeral from \"numeral\";\r\nimport {Circle, Popup} from \"react-leaflet\";\r\n\r\n//map countries graph data\r\nconst dataColor = {\r\n    cases:{\r\n        hex: \"#748fdc\",\r\n        multiplier:700,\r\n    },\r\n    recovered:{\r\n        hex: \"#23cc37\",\r\n        multiplier:1200,\r\n    },\r\n    deaths:{\r\n        hex: \"#5b6169\",\r\n        multiplier:2000,\r\n    }\r\n};\r\n\r\n//use leaflet\r\nexport const showCircle = (data, casesType =\"cases\") =>(\r\n    data.map((country,idx) => (\r\n            <Circle key = {idx}\r\n                    center={[country.countryInfo.lat, country.countryInfo.long]}\r\n                    fillOpacity={0.5}\r\n                    color={dataColor[casesType].hex}\r\n                    fillColor={dataColor[casesType].hex}\r\n                    radius = {Math.sqrt(country[casesType]) * dataColor[casesType].multiplier}\r\n            >\r\n              {/*{console.log(data)}*/}\r\n                <Popup>\r\n                    <div className={\"showPopup\"}>\r\n                        <div><img src={country.countryInfo.flag} alt=\"\"/></div>\r\n                        <div><h4>{country.country}</h4></div>\r\n                        <p>Cases: <span className={\"cases\"}>{numeral(country.cases).format(\"0,0\")}</span></p>\r\n                        <p>Recovered: <span className={\"recovered\"}>{numeral(country.recovered).format(\"0,0\")}</span></p>\r\n                        <p>Active: <span className={\"active\"}>{numeral(country.cases-country.recovered-country.deaths).format(\"0,0\")}</span></p>\r\n                        <p>Deaths: <span className={\"deaths\"}>{numeral(country.deaths).format(\"0,0\")}</span></p>\r\n                    </div>\r\n                </Popup>\r\n            </Circle>\r\n        )\r\n    )\r\n);\r\n\r\n//use leaflet to make map\r\nexport function Map({ countries, casesType, center, zoom}) {\r\n    return(\r\n        <Container>\r\n            <Row  className={\"MapComp\"}>\r\n                <Col className={\"p-2\"} xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\r\n                    <Row>\r\n                        <Col className={\"MapDiv\"} xs=\"7\" sm=\"7\" md=\"7\" lg=\"7\" xl=\"7\">\r\n                            <h4 className={\"subTitle text-left\"}>Map</h4>\r\n                        </Col>\r\n                        <Col className={\"dataUpdate\"} xs=\"5\" sm=\"5\" md=\"5\" lg=\"5\" xl=\"5\">\r\n                            <div>Last Updated April 09, 2020</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className={\"MapComp-Map\"} xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\r\n                            <div className={\"map\"}>\r\n                                <LeafletMap center={center} zoom={zoom}>\r\n                                    <TileLayer\r\n                                        url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n                                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                    />\r\n                                    {/*{console.log(casesType,countries)}*/}\r\n                                    {showCircle(countries, casesType)}\r\n                                </LeafletMap>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./MainContent.css\";\r\nimport {Cases} from \"./Cases/Cases\";\r\nimport {Map} from \"./Map/Map\";\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nexport function MainContent(props) {\r\n    const [data,setData] = useState([]);\r\n    const [active,setActive] = useState(0);\r\n    const [mapCenter, setMapCenter] = useState({lat: 20, lng: 0});\r\n    const [mapZoom, setMapZoom] = useState(1.5);\r\n    // const [mapCountries, setMapCountries] = useState([]);\r\n    const [casesType,setCasesType] = useState(\"cases\");//_______________________________________\r\n\r\n    const url = props.country === \"selectCountry\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${props.country}`;\r\n\r\n    // useEffect(()=> {\r\n    //     async function totalData() {\r\n    //         const response = await  axios.get(url);\r\n    //         setData(response.data);\r\n    //         setActive(response.data.todayCases - response.data.todayRecovered - response.data.todayDeaths < 0 ? 0\r\n    //             : response.data.todayCases - response.data.todayRecovered - response.data.todayDeaths)\r\n    //         // return response\r\n    //     }\r\n    //     totalData()\r\n    // },[props.country]);\r\n\r\n    useEffect(()=>{\r\n        const totalData = async()=>{\r\n            await fetch(url)\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                        setData(response);\r\n                        // setMapCountries(response);\r\n                        setActive(response.todayCases - response.todayRecovered - response.todayDeaths < 0 ? 0\r\n                            : response.todayCases - response.todayRecovered - response.todayDeaths);\r\n                        // console.log(response);\r\n                        setMapCenter([response.countryInfo.lat, response.countryInfo.long]);\r\n                        setMapZoom(4);\r\n                    }\r\n                )\r\n                .catch(() => console.log(\"Can’t access \" + url + \" response.\"))\r\n        };\r\n        totalData();\r\n    },[props.country]);\r\n\r\n    // console.log(data);\r\n    // console.log(mapCountries);\r\n\r\n    return(\r\n        <div className={\"MainContent px-1\"}>\r\n            <Row>\r\n                <Col className={\"p-2 borderMin\"} xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\r\n                    <Cases casesType={casesType} country={props.country} data={data} active={active}/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className={\"p-2 borderMin\"} xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"12\">\r\n                    <Map casesType={casesType} countries={props.countries} center={mapCenter} zoom={mapZoom}/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport {LeftAside} from \"./LeftAside/LeftAside\";\nimport {RightAside} from \"./RightAside/RightAside\";\nimport {MainContent} from \"./MainContent/MainContent\";\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n    const [countries,setCountries] = useState([]);\n    const [country,setCountry] = useState(\"selectCountry\");\n\n    useEffect(()=>{\n        const getCountries = async()=>{\n            await fetch(\"https://disease.sh/v3/covid-19/countries/\")\n            // await fetch(\"https://corona.lmao.ninja/v2/countries\")\n                .then(response => response.json())\n                .then(response => {\n                        setCountries(response)\n                    }\n                )\n        };\n        getCountries();\n    },[]);\n\n  return (\n      <Container fluid>\n          {/*header*/}\n          <Row>\n              <Col className={\"border1 pl-3 p-2\"} xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\" xl=\"8\">\n                  <h1>COVID-19 Dashboard by the CSSE</h1>\n              </Col>\n              {/*select Country whit material-ui*/}\n              <Col xs=\"12\" sm=\"10\" md=\"4\" lg=\"4\" xl=\"4\">\n                  <FormControl className=\"selectItem\">\n                      <Select\n                          variant=\"outlined\"\n                          value={country}\n                          className={\"headerOption mt-3\"}\n                          onChange={(event)=>setCountry(event.target.value)}\n                      >\n                          <MenuItem value=\"selectCountry\">Selec country</MenuItem>\n                          {\n                              countries.map((item, idx)=>\n                                  <MenuItem key={idx} value={item.countryInfo.iso3}> {item.country} </MenuItem>\n                              )\n                          }\n                      </Select>\n                  </FormControl>\n              </Col>\n          </Row>\n          {/*body*/}\n          <Row>\n              {/*Left Aside*/}\n              <Col className={\"border1 minHeight\"} xs=\"12\" sm=\"10\" md=\"5\" lg=\"4\" xl=\"3\">\n                  <LeftAside/>\n              </Col>\n              {/*Main Content*/}\n              <Col className={\"border1 minHeight px-1\"} xs=\"12\" sm=\"10\" md=\"7\" lg=\"8\" xl=\"6\">\n                  <MainContent countries={countries} country={country}/>\n              </Col>\n              {/*Right Aside*/}\n              <Col className={\"border1 minHeight\"} xs=\"12\" sm=\"10\" md=\"10\" lg=\"10\" xl=\"3\">\n                  <RightAside/>\n              </Col>\n          </Row>\n      </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}